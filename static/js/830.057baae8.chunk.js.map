{"version":3,"file":"static/js/830.057baae8.chunk.js","mappings":"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","sources":["api/api.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","constants/statuses.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/LoadMoreButton/LoadMoreButton.styled.jsx","components/LoadMoreButton/LoadMoreButton.jsx","pages/MoviesView.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = '59a503cfafa46b9718571bf9985df846';\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\n\r\nexport const getTrending = async () => { \r\n    const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\r\n    return response.data?.results;\r\n};\r\n\r\n\r\nexport const searchMovies = async (query, page, adult = false, year) => {\r\n    const getYearStr = year ? `&year=${year}` : '';\r\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&include_adult=${adult}${getYearStr}`);\r\n    return response.data.results;\r\n};\r\n\r\nexport const getMovieById = async (id) => {\r\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=uk-UA`);\r\n    return response.data;\r\n};\r\n\r\nexport const getMovieCast = async (id) => {\r\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getMovieReviews = async (id, page = 1) => {\r\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&page=${page}`);\r\n    return response.data?.results;\r\n};","import styled from '@emotion/styled';\r\n\r\n\r\nexport const MovieListContainer = styled.ul`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, 200px);\r\n    gap: 25px;\r\n    margin: 0;\r\n    padding: 20px;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const MovieName = styled.p`\r\n    margin: 0;\r\n    padding: 20px;\r\n    font-weight: 700;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: ${props => props.theme.colors.lightText};\r\n`;\r\n\r\nexport const MovieCard = styled.li`\r\n    width: 100%;\r\n    background: ${props => props.theme.colors.cardBg};\r\n    box-shadow: ${props => props.theme.colors.boxShadow};\r\n    border-radius: ${props => props.theme.radii.cardBorderRadius}px;\r\n    border: ${props => props.theme.colors.border};\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    transition: ${props => props.theme.transitions.trAllDefLin};\r\n    &>a {\r\n        text-decoration: none;\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        width: 100%;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        &>div{\r\n            width: 100%;\r\n            position: relative;\r\n        }\r\n    }\r\n    & img{\r\n        width: 100%;\r\n        min-width: 198px;\r\n        min-height: 297px;\r\n        transition: ${props => props.theme.transitions.trAllDefLin};\r\n    }\r\n    &:hover{\r\n        & img{\r\n            opacity: 0.6;\r\n        }\r\n        background: ${props => props.theme.colors.whiteText};\r\n    }\r\n`;\r\n\r\nexport const Vote = styled.p`\r\n    position: absolute;\r\n    bottom: 10px;\r\n    right: 5px;\r\n    background: ${props => props.theme.colors.btnGrad};\r\n    color: ${props => props.theme.colors.whiteText};\r\n    border-radius: ${props => props.theme.radii.input}px;\r\n    padding: 5px 10px;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    line-height: 1;\r\n    margin: 0;\r\n`;","import PropTypes from 'prop-types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { MovieListContainer, MovieName, MovieCard, Vote } from \"./MovieList.styled\";\r\nimport placeholder from '../../img/404.jpg';\r\n\r\nconst MovieList = ({ movies }) => {\r\n    const location = useLocation();\r\n    return (\r\n        <MovieListContainer>\r\n            {\r\n                movies.map(({id, title, poster_path, vote_average}) => {\r\n                    const imgPath = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : placeholder;\r\n                    const normalizedVote = Math.round((vote_average + Number.EPSILON) * 100) / 100\r\n                    return(\r\n                        <MovieCard key={id}>\r\n                            <Link to={`/movielib/movies/${id}`} state={{ from: location }}>\r\n                                <div>\r\n                                    <img src={imgPath} alt={title} />\r\n                                    <Vote>{normalizedVote}</Vote>\r\n                                </div>\r\n                                <MovieName><span>{title}</span></MovieName>\r\n                            </Link>\r\n                        </MovieCard>\r\n                    )}\r\n                )\r\n            }\r\n        </MovieListContainer>\r\n    )\r\n}\r\n\r\nMovieList.propTypes = {\r\n    movies: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MovieList;\r\n","export const STATUSES = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  REJECTED: 'rejected',\r\n  RESOLVED: 'resolved'\r\n};","import styled from '@emotion/styled';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const SearchbarStyled = styled(Form)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 16px;\r\n    border: ${props => props.theme.colors.border};\r\n    border-radius: ${props => props.theme.radii.cardBorderRadius}px;\r\n    mix-blend-mode: soft-light;\r\n    box-shadow: ${props => props.theme.colors.boxShadow};\r\n    margin-top: 15px;\r\n    background: ${props => props.theme.colors.cardBg};\r\n    &>div{\r\n        display: flex;\r\n        align-items: flex-start;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        &>div{\r\n            flex-direction: column;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n    width: 100%;\r\n    &>label{\r\n        font-size: 15px;\r\n        margin-bottom: 5px;\r\n    }\r\n    margin-right: 20px;\r\n    @media screen and (max-width: 768px) {\r\n        margin: 0 0 15px 0;\r\n    }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    padding: 8px 16px;\r\n    border-radius: ${props => props.theme.radii.button}px;\r\n    outline: none;\r\n    border: 1px solid ${props => props.theme.colors.whiteText}; \r\n    color: black;\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n    min-width: 100px;\r\n    transition: ${props => props.theme.transitions.trAllDefLin}; \r\n    background-color: ${props => props.theme.colors.whiteText}; \r\n    box-shadow: ${props => props.theme.colors.boxShadow};\r\n    cursor: pointer;\r\n    margin: 0;\r\n    &:hover{\r\n        background-color: ${props => props.theme.colors.cardBg}; \r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        min-width: 180px;\r\n    }\r\n`;\r\n\r\nexport const FieldStyled = styled(Field)`\r\n    &[type=\"text\"], &[type=\"number\"]{\r\n        background: #ffffff;\r\n        display: inline-block;\r\n        width: 100%;\r\n        border-radius: ${props => props.theme.radii.input}px;\r\n        border: 1px solid #f3f3f3;\r\n        outline: none;\r\n        padding: 5px 10px;\r\n        font-size: 14px;\r\n    }\r\n    &[type=\"checkbox\"]{\r\n        margin-right: 5px;\r\n    }\r\n\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled(ErrorMessage)`\r\n    color: ${props => props.theme.colors.dangerColor};\r\n    margin-top: 5px;\r\n    padding: 5px 10px;\r\n    display: inline-block;\r\n    width: 100%;\r\n    background:  ${props => props.theme.colors.dangerBg};\r\n    border-radius: ${props => props.theme.radii.input}px;\r\n`; ","import PropTypes from 'prop-types';\r\nimport * as yup from 'yup';\r\nimport { nanoid } from 'nanoid';\r\nimport { Formik } from 'formik';\r\nimport { SearchbarStyled, FormGroup, FormButton, FieldStyled, ErrorMessageStyled} from './Searchbar.styled';\r\n\r\nconst Searchbar = ({values, submitHandler }) => {\r\n\r\n    const queryId = nanoid();\r\n    const adultId = nanoid();\r\n    const yearId = nanoid();\r\n\r\n    const handleSubmit = (values, actions) => {\r\n        submitHandler(values);\r\n    };\r\n    let schema = yup.object().shape({\r\n        query: yup.string().required('Required'),\r\n    });\r\n\r\n    return(\r\n        <Formik\r\n        initialValues={values}\r\n        validationSchema={schema}\r\n        onSubmit={handleSubmit}\r\n        >\r\n            <SearchbarStyled>\r\n                <div>\r\n                    <FormGroup>\r\n                        <label htmlFor={queryId}>Search Qery*</label>\r\n                        <FieldStyled type=\"text\" id={queryId} name=\"query\" placeholder=\"Enter search query\"/>\r\n                        <ErrorMessageStyled name=\"query\" component='div'/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor={yearId}>Year of release</label>\r\n                        <FieldStyled type=\"number\" id={yearId} name=\"year\" placeholder=\"Enter search year\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor={adultId}><FieldStyled type=\"checkbox\" id={adultId} name=\"adult\"/>Adult included</label>\r\n                    </FormGroup>\r\n                </div>\r\n                <FormButton type=\"submit\">🔍 Search</FormButton>\r\n            </SearchbarStyled>\r\n        </Formik>\r\n    ) \r\n};\r\n\r\nSearchbar.propTypes = {\r\n    values: PropTypes.shape().isRequired,\r\n    submitHandler: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;","import styled from '@emotion/styled';\r\n\r\nexport const ButtonStyled = styled.button`\r\n    padding: 8px 16px;\r\n    border-radius: ${props => props.theme.radii.button}px;\r\n    background:  ${props => props.theme.colors.btnGrad};\r\n    transition: ${props => props.theme.transitions.trAllDefLin};\r\n    text-align: center;\r\n    display: inline-block;\r\n    color: ${props => props.theme.colors.whiteText};\r\n    border: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    min-width: 180px;\r\n    box-shadow:  ${props => props.theme.colors.boxShadow};\r\n    &:hover, &:focus {\r\n      opacity: 0.8;\r\n    }\r\n`;\r\n\r\nexport const LoadMoreBtnWrap = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 20px 0 40px 0;\r\n`;","import PropTypes from 'prop-types';\r\nimport { ButtonStyled,  LoadMoreBtnWrap } from './LoadMoreButton.styled'\r\n\r\nconst LoadMoreButton = ({clickHandler}) => {\r\n    return(\r\n        <LoadMoreBtnWrap>\r\n            <ButtonStyled type=\"button\" onClick={() =>clickHandler()}>Load More</ButtonStyled>\r\n        </LoadMoreBtnWrap>\r\n    )\r\n};\r\n\r\nLoadMoreButton.propTypes = {\r\n    clickHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LoadMoreButton;","import  *  as api from 'api/api';\r\nimport { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport MovieList from 'components/MovieList';\r\nimport Loader from 'components/Loader';\r\nimport Searchbar from 'components/Searchbar';\r\nimport LoadMoreButton from 'components/LoadMoreButton';\r\nimport { STATUSES } from 'constants/statuses';\r\nimport { ErrorMessage } from 'components/App/App.syled';\r\n\r\nconst MoviesView = () => {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const params = useMemo(\r\n        () => Object.fromEntries([...searchParams]),\r\n        [searchParams]\r\n    );\r\n    const { query, page, adult, year } = params;\r\n    const [movies, setMovies] = useState([]); \r\n    const [error, setError] = useState('');\r\n    const [status, setStatus] = useState(STATUSES.IDLE);\r\n    const firstRender = useRef(true);\r\n\r\n    const handleSubmit = (values) => {\r\n        const { query, adult, year } = values;\r\n        setError('');\r\n        const optionalYear = year ? {year} : {};\r\n        setMovies([]);\r\n        setSearchParams({ query, page: '1', adult, ...optionalYear })\r\n    };\r\n\r\n    const loadMore = () => {\r\n        const newPage = Number(page) + 1;\r\n        const optionalYear = year ? {year} : {};\r\n        setSearchParams({ query, page: newPage, adult, ...optionalYear })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const searchMovies = async () => {\r\n            setStatus(STATUSES.PENDING);\r\n            try {\r\n                const newMovies = await api.searchMovies(query, page, adult, year);\r\n                if(newMovies.length === 0){\r\n                    setError(`❌ Nothing found for your request: ${query}, on page ${page}. Please, go back or change your search parameters.`);\r\n                    setStatus(STATUSES.REJECTED);\r\n                    setMovies([]);\r\n                }\r\n                else{\r\n                    setMovies(prevMovies => [...prevMovies, ...newMovies]);\r\n                    setStatus(STATUSES.RESOLVED);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setError(error);\r\n                setStatus(STATUSES.REJECTED);\r\n                setMovies([]);\r\n            }\r\n        }\r\n\r\n        if(firstRender.current){\r\n            firstRender.current = false;\r\n            return;\r\n        }\r\n        if(!query) { return; }\r\n        searchMovies();\r\n    }, [query, page, adult, year]);\r\n\r\n    const getValues = () => {\r\n        let adultVal = '';\r\n        if (adult === \"true\") adultVal = true;\r\n        else adultVal = false;\r\n        return {\r\n            query: query ? query : '', \r\n            adult: adultVal, \r\n            year: year ? Number(year) : ''\r\n        }\r\n    }\r\n\r\n\r\n    if(status === STATUSES.IDLE){\r\n        return(\r\n            <main>\r\n                <Searchbar values={getValues()} submitHandler={handleSubmit} />\r\n            </main>\r\n        );\r\n    };\r\n    \r\n    if(status === STATUSES.PENDING || status === STATUSES.RESOLVED ){\r\n        return(\r\n            <main>\r\n                <Searchbar values={getValues()} submitHandler={handleSubmit} />\r\n                <MovieList movies={movies}/>\r\n                {status === STATUSES.PENDING ? (<Loader/>) : (\r\n                    <LoadMoreButton clickHandler={loadMore}/>\r\n                )}\r\n            </main>\r\n        );\r\n    };\r\n\r\n    if(status === STATUSES.REJECTED){\r\n        return(\r\n            <main>\r\n                <Searchbar values={getValues()} submitHandler={handleSubmit} />\r\n                <ErrorMessage>{error}</ErrorMessage>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default MoviesView;"],"names":["API_KEY","axios","getTrending","response","data","results","searchMovies","query","page","adult","getYearStr","year","getMovieById","id","getMovieCast","getMovieReviews","MovieListContainer","styled","MovieName","props","theme","colors","lightText","MovieCard","cardBg","boxShadow","radii","cardBorderRadius","border","transitions","trAllDefLin","whiteText","Vote","btnGrad","input","movies","location","useLocation","map","title","poster_path","vote_average","imgPath","placeholder","normalizedVote","Math","round","Number","EPSILON","to","state","from","src","alt","STATUSES","IDLE","PENDING","REJECTED","RESOLVED","SearchbarStyled","Form","FormGroup","FormButton","button","FieldStyled","Field","ErrorMessageStyled","ErrorMessage","dangerColor","dangerBg","values","submitHandler","queryId","nanoid","adultId","yearId","schema","yup","shape","required","initialValues","validationSchema","onSubmit","actions","htmlFor","type","name","component","ButtonStyled","LoadMoreBtnWrap","clickHandler","onClick","useSearchParams","searchParams","setSearchParams","params","useMemo","Object","fromEntries","useState","setMovies","error","setError","status","setStatus","firstRender","useRef","handleSubmit","optionalYear","useEffect","api","newMovies","length","prevMovies","current","getValues","MovieList","Loader","newPage"],"sourceRoot":""}