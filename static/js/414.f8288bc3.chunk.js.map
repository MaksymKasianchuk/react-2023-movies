{"version":3,"file":"static/js/414.f8288bc3.chunk.js","mappings":"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","sources":["api/api.js","constants/statuses.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","components/GoToLink/GoToLink.styled.jsx","components/GoToLink/GoToLink.jsx","pages/MovieDetailsView.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = '59a503cfafa46b9718571bf9985df846';\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\n\r\nexport const getTrending = async () => { \r\n    const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\r\n    return response.data?.results;\r\n};\r\n\r\n\r\nexport const searchMovies = async (query, page, adult = false, year) => {\r\n    const getYearStr = year ? `&year=${year}` : '';\r\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&include_adult=${adult}${getYearStr}`);\r\n    return response.data.results;\r\n};\r\n\r\nexport const getMovieById = async (id) => {\r\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=uk-UA`);\r\n    return response.data;\r\n};\r\n\r\nexport const getMovieCast = async (id) => {\r\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\r\n    return response.data;\r\n};\r\n\r\nexport const getMovieReviews = async (id, page = 1) => {\r\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&page=${page}`);\r\n    return response.data?.results;\r\n};","export const STATUSES = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  REJECTED: 'rejected',\r\n  RESOLVED: 'resolved'\r\n};","import styled from '@emotion/styled';\r\n\r\n\r\nexport const MovieDetailsWrap = styled.div`\r\n    box-shadow: ${props => props.theme.colors.boxShadow};\r\n    border-radius: ${props => props.theme.radii.cardBorderRadius}px;\r\n    border: ${props => props.theme.colors.border};\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    background: ${props => props.theme.colors.cardBg};\r\n    margin-top: 40px;\r\n    @media screen and (max-width: 768px) {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n    }      \r\n`;\r\n\r\nexport const Poster = styled.div`\r\n    margin-right: 40px;\r\n    padding: 20px 0 20px 20px;\r\n    &>div{\r\n        position: relative;\r\n        margin-bottom: 20px;\r\n        &>img{\r\n            width: 300px;\r\n            border-radius: ${props => props.theme.radii.cardBorderRadius}px;\r\n        }\r\n        &>div{\r\n            position: absolute;\r\n            top: 10px;\r\n            right: 10px;\r\n            background: ${props => props.theme.colors.btnGrad};\r\n            color: ${props => props.theme.colors.whiteText};\r\n            border-radius: ${props => props.theme.radii.input}px;\r\n            padding: 5px 10px;\r\n            font-weight: 700;\r\n            line-height: 1;\r\n        }\r\n    }\r\n    @media screen and (max-width: 768px) {\r\n        text-align: center;\r\n        margin-right: 0;\r\n        padding: 20px;\r\n    }  \r\n    @media screen and (max-width: 400px) {\r\n        &>div{\r\n            &>img{\r\n                width: 100%;\r\n            }\r\n        }\r\n    }  \r\n`;\r\n\r\nexport const MovieTitle = styled.h2`\r\n    margin: 0 0 15px 0;\r\n`;\r\n\r\nexport const InfoBlock = styled.div`\r\n    padding: 20px 20px 20px 0;\r\n    @media screen and (max-width: 768px) {\r\n        padding: 20px;\r\n    }  \r\n`;\r\n\r\nexport const ShortInfo = styled.p`\r\n    margin: 15px 0 0 0;\r\n    font-weight: 400;\r\n    &>span{\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nexport const InfoBlockItem = styled.div`\r\n    margin: 0 0 20px 0;\r\n    &>p{\r\n        margin: 0;\r\n        font-size: 18px;\r\n    }\r\n    &>ul{\r\n        margin: 10px 0 0 0;\r\n        padding: 0;\r\n        list-style: none;\r\n        &>li{\r\n            display: inline-block;\r\n            padding: 5px 10px;\r\n            margin: 0 10px 5px 0;\r\n            border-radius: ${props => props.theme.radii.input}px;\r\n            background-color: #f3f3f3;\r\n            border: 1px solid #eeeeee;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const OverviewBlock = styled.div`\r\n    &>.overview-title{\r\n        margin: 0;\r\n        font-size: 18px;\r\n    }\r\n    &>.overview-txt{\r\n        margin: 15px 0 0 0;\r\n        font-size: 16px;\r\n    }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport placeholder from 'img/404.jpg';\r\nimport { \r\n    MovieDetailsWrap, \r\n    Poster, \r\n    MovieTitle, \r\n    InfoBlock, \r\n    ShortInfo, \r\n    InfoBlockItem,\r\n    OverviewBlock\r\n} from './MovieDetails.styled';\r\n\r\nconst MovieDetails = ({ movie }) => {\r\n    const {poster_path, adult, genres, overview, vote_average, vote_count, production_companies, production_countries, release_date, status, title} = movie;\r\n    const imgPath = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : placeholder;\r\n    const releaseDate = release_date.split('-').reverse().join('.');\r\n    const normalizedVote = Math.round((vote_average + Number.EPSILON) * 100) / 100\r\n    return (\r\n        <MovieDetailsWrap>\r\n            <Poster>\r\n                <div>\r\n                    <img src={imgPath} alt={title} />\r\n                    <div>{normalizedVote}</div>\r\n                </div>\r\n                <ShortInfo>People votes: <span>{vote_count}</span></ShortInfo>\r\n                <ShortInfo>18+ rating: <span>{adult ? 'yes' : 'no'}</span></ShortInfo>\r\n                <ShortInfo>Status: <span>{status}</span></ShortInfo>\r\n                <ShortInfo>Release date: <span>{releaseDate}</span></ShortInfo>\r\n            </Poster>\r\n\r\n            <InfoBlock>\r\n                <MovieTitle>{title}</MovieTitle>\r\n                \r\n                <InfoBlockItem>\r\n                    <p>Genres: </p>\r\n                    <ul>\r\n                        {\r\n                        genres.map(({name, id}) => (<li key={id}>{name} </li>))\r\n                        }\r\n                    </ul>\r\n                </InfoBlockItem>\r\n                <InfoBlockItem>\r\n                    <p>Companies: </p>\r\n                    <ul>\r\n                        {\r\n                        production_companies.map(({name, id}) => (<li key={id}>{name} </li>))\r\n                        }\r\n                    </ul>\r\n                </InfoBlockItem>\r\n                <InfoBlockItem>\r\n                    <p>Countries: </p>\r\n                    <ul>\r\n                        {\r\n                        production_countries.map(({name, iso_3166_1}) => (<li key={iso_3166_1}>{name} </li>))\r\n                        }\r\n                    </ul>\r\n                </InfoBlockItem>\r\n                <OverviewBlock>\r\n                    <p className='overview-title'>Overview</p>\r\n                    <p className='overview-txt'>{overview}</p>\r\n                </OverviewBlock>\r\n            </InfoBlock>\r\n        </MovieDetailsWrap>\r\n    )\r\n}\r\n\r\nMovieDetails.propTypes = {\r\n    movie: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default MovieDetails\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from '@emotion/styled';\r\n\r\nexport const GoToLinkStyled = styled(Link)`\r\n    padding: 8px 16px;\r\n    // margin: 10px 0;\r\n    border-radius: ${props => props.theme.radii.button}px;\r\n    background: ${props => props.theme.colors.cardBg};\r\n    transition: ${props => props.theme.transitions.trAllDefLin};\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    color: ${props => props.theme.colors.lightText};\r\n    border: 0;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    min-width: 100px;\r\n    box-shadow:  ${props => props.theme.colors.boxShadow};\r\n    &:hover, &:focus {\r\n        background: ${props => props.theme.colors.whiteText};\r\n    }\r\n`;","import { GoToLinkStyled } from \"./GoToLink.styled\";\r\n\r\nconst GoToLink = ({goToPath, children}) => {\r\n  return (\r\n    <GoToLinkStyled to={goToPath}>\r\n      {children}\r\n    </GoToLinkStyled>\r\n  )\r\n}\r\n\r\nexport default GoToLink;\r\n","import { useParams, useLocation, Outlet, NavLink} from \"react-router-dom\";\r\nimport { useState, useEffect, Suspense } from \"react\";\r\nimport { getMovieById } from \"api/api\";\r\nimport { STATUSES } from 'constants/statuses';\r\nimport { ErrorMessage, MovieBottom, MovieControls } from 'components/App/App.syled';\r\nimport MovieDetails from \"components/MovieDetails\";\r\nimport Loader from 'components/Loader';\r\nimport GoToLink from \"components/GoToLink\";\r\n\r\nconst MovieDeatailsView = () => {\r\n    const { movieId } = useParams();\r\n    const [movie, setMovie] = useState({});\r\n    const [error, setError] = useState('');\r\n    const [appStatus, setAppStatus] = useState(STATUSES.IDLE);\r\n    const location = useLocation();\r\n    const backLinkHref = location.state?.from ?? \"/\";\r\n\r\n    useEffect(()=>{\r\n        const fetchMovie = async () =>{\r\n            setAppStatus(STATUSES.PENDING);\r\n            try {\r\n                const newMovie = await getMovieById(movieId);\r\n                if(!newMovie){\r\n                    setError('❌ Sorry, something went wrong! Movie not found :(');\r\n                    setAppStatus(STATUSES.REJECTED);\r\n                }\r\n                else{\r\n                    setMovie(newMovie);\r\n                    setAppStatus(STATUSES.RESOLVED);\r\n                }\r\n            } catch (error) {\r\n                setError(error?.response.data?.status_message);\r\n                setAppStatus(STATUSES.REJECTED);\r\n            }\r\n        } \r\n        if(!movieId) return;\r\n        fetchMovie();\r\n    }, [movieId]);\r\n\r\n   \r\n    if(appStatus === STATUSES.IDLE || appStatus === STATUSES.PENDING){\r\n        return(\r\n            <main>\r\n                <GoToLink goToPath={backLinkHref}>👈🏻 Go Back</GoToLink>\r\n                <Loader />\r\n            </main>\r\n        );\r\n    };\r\n    if( appStatus === STATUSES.RESOLVED ){\r\n        return(\r\n            <main>\r\n                <MovieDetails movie={movie} />\r\n                <MovieBottom>\r\n                    <MovieControls>\r\n                        <GoToLink goToPath={backLinkHref}>👈🏻 Go Back</GoToLink>\r\n                        <div>\r\n                            <NavLink to=\"cast\">Cast</NavLink>\r\n                            <NavLink to=\"reviews\">Rewiews</NavLink>\r\n                        </div>\r\n                    </MovieControls>\r\n                    <Suspense fallback={<Loader />}>\r\n                        <Outlet />\r\n                    </Suspense>\r\n                </MovieBottom>\r\n            </main>\r\n        );\r\n    };\r\n    if(appStatus === STATUSES.REJECTED){\r\n        return(\r\n            <main>\r\n                <GoToLink goToPath={backLinkHref}>👈🏻 Go Back</GoToLink>\r\n                <ErrorMessage>{error}</ErrorMessage>\r\n            </main>\r\n        );\r\n    };\r\n};\r\n\r\nexport default MovieDeatailsView;"],"names":["API_KEY","axios","getTrending","response","data","results","searchMovies","query","page","adult","getYearStr","year","getMovieById","id","getMovieCast","getMovieReviews","STATUSES","IDLE","PENDING","REJECTED","RESOLVED","MovieDetailsWrap","styled","props","theme","colors","boxShadow","radii","cardBorderRadius","border","cardBg","Poster","btnGrad","whiteText","input","MovieTitle","InfoBlock","ShortInfo","InfoBlockItem","OverviewBlock","movie","poster_path","genres","overview","vote_average","vote_count","production_companies","production_countries","release_date","status","title","imgPath","placeholder","releaseDate","split","reverse","join","normalizedVote","Math","round","Number","EPSILON","src","alt","map","name","iso_3166_1","className","GoToLinkStyled","Link","button","transitions","trAllDefLin","lightText","goToPath","children","to","movieId","useParams","useState","setMovie","error","setError","appStatus","setAppStatus","backLinkHref","useLocation","state","from","useEffect","fetchMovie","newMovie","status_message","Loader","Suspense","fallback"],"sourceRoot":""}